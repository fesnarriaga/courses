// <auto-generated />
using System;
using BasicApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BasicApp.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BasicApp.Models.Actor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Actors");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0aadf706-0eae-478e-8dd9-d337463920d7"),
                            Name = "Robert Downey Jr."
                        },
                        new
                        {
                            Id = new Guid("a044553d-f3c0-48c2-8ded-160b409b5203"),
                            Name = "Chris Evans"
                        },
                        new
                        {
                            Id = new Guid("ec80a220-3c9d-498f-bbcf-d02a60389fa4"),
                            Name = "Danai Guira"
                        },
                        new
                        {
                            Id = new Guid("065a4f10-e46d-4502-ade8-f37d72d64d3b"),
                            Name = "Donald Glover"
                        },
                        new
                        {
                            Id = new Guid("42defd05-818c-427b-a1ef-94b5e15d8256"),
                            Name = "Beyoncé"
                        },
                        new
                        {
                            Id = new Guid("a6a84308-efab-4f1d-b9c7-eab696f91f0a"),
                            Name = "Donny Yen"
                        },
                        new
                        {
                            Id = new Guid("3e9c60ac-9b0a-45bd-8a34-b17c09d5edae"),
                            Name = "Will Smith"
                        },
                        new
                        {
                            Id = new Guid("fad15e86-fb5c-4706-b3bd-97add48e77e1"),
                            Name = "Maggie Smith"
                        },
                        new
                        {
                            Id = new Guid("42a9f2dc-ed81-47bc-86c9-37eab07352bf"),
                            Name = "Michelle Dockery"
                        },
                        new
                        {
                            Id = new Guid("10a8d4a0-c526-4dd5-860a-8c4c1fd007dc"),
                            Name = "Karyn Parsons"
                        },
                        new
                        {
                            Id = new Guid("75a094a6-4e2c-4ab9-9197-d98c49e05978"),
                            Name = "Millie Bobby Brown"
                        },
                        new
                        {
                            Id = new Guid("6d3d82ac-1115-444f-bcf8-0e0518174125"),
                            Name = "Caleb McLaughlin"
                        },
                        new
                        {
                            Id = new Guid("952c484e-383b-4a0e-9e23-090f01f3283f"),
                            Name = "Winona Ryder"
                        },
                        new
                        {
                            Id = new Guid("04ff0e91-2ed6-4200-9f7a-caa5b47e9d4b"),
                            Name = "David Harbour"
                        },
                        new
                        {
                            Id = new Guid("b23c7a12-2deb-4a3f-97f6-e6350f4665ff"),
                            Name = "Matsuya Onoe"
                        },
                        new
                        {
                            Id = new Guid("3639dee6-db01-4a1f-b8d6-7f9800877feb"),
                            Name = "Hazuki Shimizu"
                        },
                        new
                        {
                            Id = new Guid("9177780c-7fa2-46b4-8883-e85d68826a91"),
                            Name = "Norman Reedus"
                        },
                        new
                        {
                            Id = new Guid("418a16a7-3ead-4488-af7c-66110d391d87"),
                            Name = "Melissa McBride"
                        });
                });

            modelBuilder.Entity("BasicApp.Models.Address", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Complement")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Neighborhood")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<Guid>("SupplierId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("SupplierId")
                        .IsUnique();

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("BasicApp.Models.Character", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ActorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ProductionId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ActorId");

                    b.HasIndex("ProductionId");

                    b.ToTable("Characters");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a4fe1159-01ff-430c-9059-20926501a4d3"),
                            ActorId = new Guid("0aadf706-0eae-478e-8dd9-d337463920d7"),
                            Name = "Tony Stark",
                            ProductionId = new Guid("a669c9e6-5cfe-44cf-a27e-4a07ec71678e")
                        },
                        new
                        {
                            Id = new Guid("ba3d2449-3ec3-4308-a9bc-2fcdd352459a"),
                            ActorId = new Guid("a044553d-f3c0-48c2-8ded-160b409b5203"),
                            Name = "Steve Rogers",
                            ProductionId = new Guid("a669c9e6-5cfe-44cf-a27e-4a07ec71678e")
                        },
                        new
                        {
                            Id = new Guid("b3f18f9a-bf4d-4236-93a4-7318c189b864"),
                            ActorId = new Guid("ec80a220-3c9d-498f-bbcf-d02a60389fa4"),
                            Name = "Okoye",
                            ProductionId = new Guid("a669c9e6-5cfe-44cf-a27e-4a07ec71678e")
                        },
                        new
                        {
                            Id = new Guid("e2c339da-6533-47cb-937c-c58bbe4ff096"),
                            ActorId = new Guid("065a4f10-e46d-4502-ade8-f37d72d64d3b"),
                            Name = "Simba",
                            ProductionId = new Guid("1c23ba8f-1c5e-4db3-a7a7-bf0f4685b688")
                        },
                        new
                        {
                            Id = new Guid("43a4e0b1-3a3f-4ae8-8e2d-77c0c822141c"),
                            ActorId = new Guid("42defd05-818c-427b-a1ef-94b5e15d8256"),
                            Name = "Nala",
                            ProductionId = new Guid("1c23ba8f-1c5e-4db3-a7a7-bf0f4685b688")
                        },
                        new
                        {
                            Id = new Guid("e2f1e8cd-4d7d-4ec6-ae05-b0251f89f60d"),
                            ActorId = new Guid("a6a84308-efab-4f1d-b9c7-eab696f91f0a"),
                            Name = "Ip Man",
                            ProductionId = new Guid("c726bf0e-79ab-4e81-9825-b30b690ba77f")
                        },
                        new
                        {
                            Id = new Guid("07c880ab-73e4-4636-9d5c-749152ea3923"),
                            ActorId = new Guid("3e9c60ac-9b0a-45bd-8a34-b17c09d5edae"),
                            Name = "Henry Brogan",
                            ProductionId = new Guid("7668cedc-9cc1-4ca3-a7a5-22d8e9439ef5")
                        },
                        new
                        {
                            Id = new Guid("b00ad210-f917-4c20-bc5f-03be6f8f6540"),
                            ActorId = new Guid("fad15e86-fb5c-4706-b3bd-97add48e77e1"),
                            Name = "Violet Crawley",
                            ProductionId = new Guid("594c3c95-71b5-497c-b8c1-cceb61ba55b2")
                        },
                        new
                        {
                            Id = new Guid("fbbc4e14-4d23-4414-ba19-4932a2c6adff"),
                            ActorId = new Guid("42a9f2dc-ed81-47bc-86c9-37eab07352bf"),
                            Name = "Lady Mary Crawley",
                            ProductionId = new Guid("594c3c95-71b5-497c-b8c1-cceb61ba55b2")
                        },
                        new
                        {
                            Id = new Guid("800afaf3-6a13-4be0-9e36-f8c4848c48f8"),
                            ActorId = new Guid("3e9c60ac-9b0a-45bd-8a34-b17c09d5edae"),
                            Name = "Will Smith",
                            ProductionId = new Guid("9dead2c1-a458-4fac-911f-f75b43dabb4c")
                        },
                        new
                        {
                            Id = new Guid("2f83add8-6242-43aa-82f0-2a16cbdb7890"),
                            ActorId = new Guid("10a8d4a0-c526-4dd5-860a-8c4c1fd007dc"),
                            Name = "Hilary Banks",
                            ProductionId = new Guid("9dead2c1-a458-4fac-911f-f75b43dabb4c")
                        },
                        new
                        {
                            Id = new Guid("3b5e90d8-c25b-4b73-a889-121bdf0e6ef9"),
                            ActorId = new Guid("fad15e86-fb5c-4706-b3bd-97add48e77e1"),
                            Name = "Violet Crawley",
                            ProductionId = new Guid("373914c9-b99f-48ff-a4ef-5486b1499b74")
                        },
                        new
                        {
                            Id = new Guid("72e8841c-6370-4aa0-b48e-6b5373f133e1"),
                            ActorId = new Guid("42a9f2dc-ed81-47bc-86c9-37eab07352bf"),
                            Name = "Lady Mary Crawley",
                            ProductionId = new Guid("373914c9-b99f-48ff-a4ef-5486b1499b74")
                        },
                        new
                        {
                            Id = new Guid("6ed7e268-a25e-41a0-a12c-774e19d0a8e9"),
                            ActorId = new Guid("75a094a6-4e2c-4ab9-9197-d98c49e05978"),
                            Name = "Eleven",
                            ProductionId = new Guid("96837c11-5528-4fab-9285-d4bd11b72a3d")
                        },
                        new
                        {
                            Id = new Guid("9ff37dc2-16c9-4842-9a90-9c027e0f3820"),
                            ActorId = new Guid("6d3d82ac-1115-444f-bcf8-0e0518174125"),
                            Name = "Lucas",
                            ProductionId = new Guid("96837c11-5528-4fab-9285-d4bd11b72a3d")
                        },
                        new
                        {
                            Id = new Guid("e79cb17c-03ac-43cd-9d5c-634b46420dda"),
                            ActorId = new Guid("952c484e-383b-4a0e-9e23-090f01f3283f"),
                            Name = "Joyce Byers",
                            ProductionId = new Guid("96837c11-5528-4fab-9285-d4bd11b72a3d")
                        },
                        new
                        {
                            Id = new Guid("51d36164-2593-4ebf-97eb-05aca8946502"),
                            ActorId = new Guid("04ff0e91-2ed6-4200-9f7a-caa5b47e9d4b"),
                            Name = "Jim Hopper",
                            ProductionId = new Guid("96837c11-5528-4fab-9285-d4bd11b72a3d")
                        },
                        new
                        {
                            Id = new Guid("fde7b141-7112-47be-825b-ea348baff5fa"),
                            ActorId = new Guid("b23c7a12-2deb-4a3f-97f6-e6350f4665ff"),
                            Name = "Ametani Kantarou",
                            ProductionId = new Guid("a007ab4a-a257-409a-a32c-a5a3a1e053ed")
                        },
                        new
                        {
                            Id = new Guid("ae630bef-0bee-4cb1-842b-acfb63d53859"),
                            ActorId = new Guid("3639dee6-db01-4a1f-b8d6-7f9800877feb"),
                            Name = "Sano Erika",
                            ProductionId = new Guid("a007ab4a-a257-409a-a32c-a5a3a1e053ed")
                        },
                        new
                        {
                            Id = new Guid("a95365b4-f9af-44d5-9080-b195ea54280e"),
                            ActorId = new Guid("9177780c-7fa2-46b4-8883-e85d68826a91"),
                            Name = "Daryl Dixon",
                            ProductionId = new Guid("2d83a109-1fb4-4f63-98d5-f838bdd73d98")
                        },
                        new
                        {
                            Id = new Guid("aafae44d-08d1-4327-a1d3-ff4fdb2c1daf"),
                            ActorId = new Guid("ec80a220-3c9d-498f-bbcf-d02a60389fa4"),
                            Name = "Michonne",
                            ProductionId = new Guid("2d83a109-1fb4-4f63-98d5-f838bdd73d98")
                        },
                        new
                        {
                            Id = new Guid("709ff826-52ba-4a51-860e-43c65649ca72"),
                            ActorId = new Guid("418a16a7-3ead-4488-af7c-66110d391d87"),
                            Name = "Carol Peletier",
                            ProductionId = new Guid("2d83a109-1fb4-4f63-98d5-f838bdd73d98")
                        });
                });

            modelBuilder.Entity("BasicApp.Models.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("SupplierId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("SupplierId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("BasicApp.Models.Production", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Productions");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Production");
                });

            modelBuilder.Entity("BasicApp.Models.Rating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Source")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Stars")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductionId");

                    b.ToTable("Ratings");

                    b.HasData(
                        new
                        {
                            Id = new Guid("5e00af09-f77d-4722-a7a7-c01c875767f0"),
                            ProductionId = new Guid("a669c9e6-5cfe-44cf-a27e-4a07ec71678e"),
                            Source = "App",
                            Stars = 3
                        },
                        new
                        {
                            Id = new Guid("93ba8bd2-06fc-458d-bd1a-8ba41caf10ce"),
                            ProductionId = new Guid("a669c9e6-5cfe-44cf-a27e-4a07ec71678e"),
                            Source = "App",
                            Stars = 1
                        },
                        new
                        {
                            Id = new Guid("4752c3b2-a097-44f3-b9f2-0b82cf1a58e4"),
                            ProductionId = new Guid("1c23ba8f-1c5e-4db3-a7a7-bf0f4685b688"),
                            Source = "Internet",
                            Stars = 4
                        },
                        new
                        {
                            Id = new Guid("a1323f6b-8c23-4052-95c3-d85870d5bc96"),
                            ProductionId = new Guid("1c23ba8f-1c5e-4db3-a7a7-bf0f4685b688"),
                            Source = "Magazine",
                            Stars = 3
                        },
                        new
                        {
                            Id = new Guid("d91a9097-65b2-4aa0-afb2-32fcbf6be0a7"),
                            ProductionId = new Guid("1c23ba8f-1c5e-4db3-a7a7-bf0f4685b688"),
                            Source = "Internet",
                            Stars = 4
                        },
                        new
                        {
                            Id = new Guid("db6fee83-d919-499b-babd-4a0254399acc"),
                            ProductionId = new Guid("1c23ba8f-1c5e-4db3-a7a7-bf0f4685b688"),
                            Source = "Newspaper",
                            Stars = 1
                        },
                        new
                        {
                            Id = new Guid("d7adba86-c2a6-4c94-a0c3-d9c502ef8275"),
                            ProductionId = new Guid("1c23ba8f-1c5e-4db3-a7a7-bf0f4685b688"),
                            Source = "App",
                            Stars = 4
                        },
                        new
                        {
                            Id = new Guid("85ffe2d4-4c37-47a9-bd36-a21f33672c0f"),
                            ProductionId = new Guid("c726bf0e-79ab-4e81-9825-b30b690ba77f"),
                            Source = "Newspaper",
                            Stars = 1
                        },
                        new
                        {
                            Id = new Guid("0477e936-ee86-460a-84fb-17c67f800347"),
                            ProductionId = new Guid("c726bf0e-79ab-4e81-9825-b30b690ba77f"),
                            Source = "Magazine",
                            Stars = 2
                        },
                        new
                        {
                            Id = new Guid("fe8bae04-d4e8-43a7-a4b6-375107a1092f"),
                            ProductionId = new Guid("c726bf0e-79ab-4e81-9825-b30b690ba77f"),
                            Source = "Magazine",
                            Stars = 1
                        },
                        new
                        {
                            Id = new Guid("e12a1843-ec38-48c6-8e5a-501f8ba28586"),
                            ProductionId = new Guid("c726bf0e-79ab-4e81-9825-b30b690ba77f"),
                            Source = "Internet",
                            Stars = 4
                        },
                        new
                        {
                            Id = new Guid("df8d7565-8691-43c0-9252-3eeb59e4f946"),
                            ProductionId = new Guid("7668cedc-9cc1-4ca3-a7a5-22d8e9439ef5"),
                            Source = "Newspaper",
                            Stars = 2
                        },
                        new
                        {
                            Id = new Guid("94dab8d0-e6c4-4753-85bb-0d1aa98f703e"),
                            ProductionId = new Guid("7668cedc-9cc1-4ca3-a7a5-22d8e9439ef5"),
                            Source = "Magazine",
                            Stars = 4
                        },
                        new
                        {
                            Id = new Guid("33bf6942-1209-400e-996d-9378286ddb93"),
                            ProductionId = new Guid("7668cedc-9cc1-4ca3-a7a5-22d8e9439ef5"),
                            Source = "Internet",
                            Stars = 3
                        },
                        new
                        {
                            Id = new Guid("bf4424b7-9af3-43fe-b7a3-a206654e27ea"),
                            ProductionId = new Guid("7668cedc-9cc1-4ca3-a7a5-22d8e9439ef5"),
                            Source = "App",
                            Stars = 4
                        },
                        new
                        {
                            Id = new Guid("d4ed3c43-e34b-47a3-82ed-a1ff4af6c5a6"),
                            ProductionId = new Guid("7668cedc-9cc1-4ca3-a7a5-22d8e9439ef5"),
                            Source = "Newspaper",
                            Stars = 3
                        },
                        new
                        {
                            Id = new Guid("1bea6cdd-385e-4b8a-ac43-d94eb6d4278b"),
                            ProductionId = new Guid("594c3c95-71b5-497c-b8c1-cceb61ba55b2"),
                            Source = "Internet",
                            Stars = 4
                        },
                        new
                        {
                            Id = new Guid("42a9b9b5-f181-4c9d-8858-99b66026ea6e"),
                            ProductionId = new Guid("594c3c95-71b5-497c-b8c1-cceb61ba55b2"),
                            Source = "Magazine",
                            Stars = 1
                        },
                        new
                        {
                            Id = new Guid("35184bc9-e12a-4c64-9518-a10ecdd7bfcb"),
                            ProductionId = new Guid("9dead2c1-a458-4fac-911f-f75b43dabb4c"),
                            Source = "Magazine",
                            Stars = 5
                        },
                        new
                        {
                            Id = new Guid("a207a0a0-472a-4281-a17f-04734c82d7a6"),
                            ProductionId = new Guid("9dead2c1-a458-4fac-911f-f75b43dabb4c"),
                            Source = "Newspaper",
                            Stars = 3
                        },
                        new
                        {
                            Id = new Guid("0f6aa4e6-97c0-4837-b35f-8ede921f2cf9"),
                            ProductionId = new Guid("9dead2c1-a458-4fac-911f-f75b43dabb4c"),
                            Source = "Newspaper",
                            Stars = 3
                        },
                        new
                        {
                            Id = new Guid("469420a6-fdc4-4b59-9666-9ccd4b4511c5"),
                            ProductionId = new Guid("9dead2c1-a458-4fac-911f-f75b43dabb4c"),
                            Source = "Magazine",
                            Stars = 5
                        },
                        new
                        {
                            Id = new Guid("3492a78e-4302-48a7-9ab2-12c1f5d4dbdd"),
                            ProductionId = new Guid("373914c9-b99f-48ff-a4ef-5486b1499b74"),
                            Source = "App",
                            Stars = 4
                        },
                        new
                        {
                            Id = new Guid("d09c361f-0ed7-4b2b-b12c-e27ecc92552d"),
                            ProductionId = new Guid("373914c9-b99f-48ff-a4ef-5486b1499b74"),
                            Source = "Internet",
                            Stars = 1
                        },
                        new
                        {
                            Id = new Guid("3a1f3eba-3f23-49fa-a76b-f06d97cf9ec3"),
                            ProductionId = new Guid("373914c9-b99f-48ff-a4ef-5486b1499b74"),
                            Source = "Magazine",
                            Stars = 4
                        },
                        new
                        {
                            Id = new Guid("16b3196b-2646-434d-bba0-7329efb5f517"),
                            ProductionId = new Guid("96837c11-5528-4fab-9285-d4bd11b72a3d"),
                            Source = "Internet",
                            Stars = 1
                        },
                        new
                        {
                            Id = new Guid("3a1dd27c-352a-4628-a740-243266429605"),
                            ProductionId = new Guid("96837c11-5528-4fab-9285-d4bd11b72a3d"),
                            Source = "Magazine",
                            Stars = 4
                        },
                        new
                        {
                            Id = new Guid("3c7374ad-1549-4d76-a1a4-be4684e14ef8"),
                            ProductionId = new Guid("96837c11-5528-4fab-9285-d4bd11b72a3d"),
                            Source = "Internet",
                            Stars = 4
                        },
                        new
                        {
                            Id = new Guid("fef5fdd6-b9e8-4c72-b9cd-b0ca5df18605"),
                            ProductionId = new Guid("a007ab4a-a257-409a-a32c-a5a3a1e053ed"),
                            Source = "Magazine",
                            Stars = 4
                        },
                        new
                        {
                            Id = new Guid("c98c5e32-1c36-44c7-9b8e-4eb12e48966f"),
                            ProductionId = new Guid("a007ab4a-a257-409a-a32c-a5a3a1e053ed"),
                            Source = "Magazine",
                            Stars = 4
                        },
                        new
                        {
                            Id = new Guid("6c2ffdeb-1f08-4100-a5d8-c279682fe586"),
                            ProductionId = new Guid("a007ab4a-a257-409a-a32c-a5a3a1e053ed"),
                            Source = "Newspaper",
                            Stars = 4
                        },
                        new
                        {
                            Id = new Guid("669c5461-38bd-4566-b207-78a048385813"),
                            ProductionId = new Guid("a007ab4a-a257-409a-a32c-a5a3a1e053ed"),
                            Source = "Newspaper",
                            Stars = 4
                        },
                        new
                        {
                            Id = new Guid("279ec745-fdd9-4644-bdf5-6f2c02a58d92"),
                            ProductionId = new Guid("2d83a109-1fb4-4f63-98d5-f838bdd73d98"),
                            Source = "Newspaper",
                            Stars = 4
                        },
                        new
                        {
                            Id = new Guid("96a30668-3def-4a9e-84aa-a45422320ae0"),
                            ProductionId = new Guid("2d83a109-1fb4-4f63-98d5-f838bdd73d98"),
                            Source = "App",
                            Stars = 2
                        },
                        new
                        {
                            Id = new Guid("ba7e146c-c5bb-4c92-9c22-a00e3024ad73"),
                            ProductionId = new Guid("2d83a109-1fb4-4f63-98d5-f838bdd73d98"),
                            Source = "Magazine",
                            Stars = 2
                        },
                        new
                        {
                            Id = new Guid("4e365e20-636a-4b29-ac1c-80f90dce43c6"),
                            ProductionId = new Guid("2d83a109-1fb4-4f63-98d5-f838bdd73d98"),
                            Source = "Magazine",
                            Stars = 5
                        });
                });

            modelBuilder.Entity("BasicApp.Models.Supplier", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Document")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("SupplierType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("BasicApp.Models.Movie", b =>
                {
                    b.HasBaseType("BasicApp.Models.Production");

                    b.Property<int>("DurationInMinutes")
                        .HasColumnType("int");

                    b.Property<double>("WorldwideBoxOfficeGross")
                        .HasColumnType("float");

                    b.HasDiscriminator().HasValue("Movie");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a669c9e6-5cfe-44cf-a27e-4a07ec71678e"),
                            Name = "Avengers: Endgame",
                            ReleaseDate = new DateTime(2019, 4, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DurationInMinutes = 181,
                            WorldwideBoxOfficeGross = 2797800564.0
                        },
                        new
                        {
                            Id = new Guid("1c23ba8f-1c5e-4db3-a7a7-bf0f4685b688"),
                            Name = "The Lion King",
                            ReleaseDate = new DateTime(2019, 7, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DurationInMinutes = 118,
                            WorldwideBoxOfficeGross = 1654791102.0
                        },
                        new
                        {
                            Id = new Guid("c726bf0e-79ab-4e81-9825-b30b690ba77f"),
                            Name = "Ip Man 4",
                            ReleaseDate = new DateTime(2019, 12, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DurationInMinutes = 105,
                            WorldwideBoxOfficeGross = 192617891.0
                        },
                        new
                        {
                            Id = new Guid("7668cedc-9cc1-4ca3-a7a5-22d8e9439ef5"),
                            Name = "Gemini Man",
                            ReleaseDate = new DateTime(2019, 11, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DurationInMinutes = 116,
                            WorldwideBoxOfficeGross = 166623705.0
                        },
                        new
                        {
                            Id = new Guid("594c3c95-71b5-497c-b8c1-cceb61ba55b2"),
                            Name = "Downton Abbey",
                            ReleaseDate = new DateTime(2020, 9, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DurationInMinutes = 120,
                            WorldwideBoxOfficeGross = 194051302.0
                        });
                });

            modelBuilder.Entity("BasicApp.Models.Series", b =>
                {
                    b.HasBaseType("BasicApp.Models.Production");

                    b.Property<int>("NumberOfEpisodes")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("Series");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9dead2c1-a458-4fac-911f-f75b43dabb4c"),
                            Name = "The Fresh Prince of Bel-Air",
                            ReleaseDate = new DateTime(1990, 9, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NumberOfEpisodes = 148
                        },
                        new
                        {
                            Id = new Guid("373914c9-b99f-48ff-a4ef-5486b1499b74"),
                            Name = "Downton Abbey",
                            ReleaseDate = new DateTime(2010, 9, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NumberOfEpisodes = 52
                        },
                        new
                        {
                            Id = new Guid("96837c11-5528-4fab-9285-d4bd11b72a3d"),
                            Name = "Stranger Things",
                            ReleaseDate = new DateTime(2016, 7, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NumberOfEpisodes = 34
                        },
                        new
                        {
                            Id = new Guid("a007ab4a-a257-409a-a32c-a5a3a1e053ed"),
                            Name = "Kantaro: The Sweet Tooth Salaryman",
                            ReleaseDate = new DateTime(2017, 7, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NumberOfEpisodes = 12
                        },
                        new
                        {
                            Id = new Guid("2d83a109-1fb4-4f63-98d5-f838bdd73d98"),
                            Name = "The Walking Dead",
                            ReleaseDate = new DateTime(2010, 10, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NumberOfEpisodes = 177
                        });
                });

            modelBuilder.Entity("BasicApp.Models.Address", b =>
                {
                    b.HasOne("BasicApp.Models.Supplier", "Supplier")
                        .WithOne("Address")
                        .HasForeignKey("BasicApp.Models.Address", "SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("BasicApp.Models.Character", b =>
                {
                    b.HasOne("BasicApp.Models.Actor", "Actor")
                        .WithMany("Characters")
                        .HasForeignKey("ActorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BasicApp.Models.Production", "Production")
                        .WithMany("Characters")
                        .HasForeignKey("ProductionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Actor");

                    b.Navigation("Production");
                });

            modelBuilder.Entity("BasicApp.Models.Product", b =>
                {
                    b.HasOne("BasicApp.Models.Supplier", "Supplier")
                        .WithMany("Products")
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("BasicApp.Models.Rating", b =>
                {
                    b.HasOne("BasicApp.Models.Production", "Production")
                        .WithMany("Ratings")
                        .HasForeignKey("ProductionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Production");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BasicApp.Models.Actor", b =>
                {
                    b.Navigation("Characters");
                });

            modelBuilder.Entity("BasicApp.Models.Production", b =>
                {
                    b.Navigation("Characters");

                    b.Navigation("Ratings");
                });

            modelBuilder.Entity("BasicApp.Models.Supplier", b =>
                {
                    b.Navigation("Address");

                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
